{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ImagePickerExample() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageUrl = _useState2[0],\n    setImageUrl = _useState2[1];\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      console.log(result);\n      if (!result.cancelled) {\n        setImageUrl(result.uri);\n      }\n    });\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Button, {\n      title: \"Pick an image from camera roll\",\n      onPress: pickImage\n    }), imageUrl && _jsx(Image, {\n      source: {\n        uri: imageUrl\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Button","Image","View","ImagePicker","jsx","_jsx","jsxs","_jsxs","ImagePickerExample","_useState","_useState2","_slicedToArray","imageUrl","setImageUrl","pickImage","_ref","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","console","log","cancelled","uri","apply","arguments","style","flex","alignItems","justifyContent","children","title","onPress","source","width","height"],"sources":["/Users/guillaumepevrier/Projets/MesProjets/MyNBFC/screens/FindScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Image, View } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\n\nexport default function ImagePickerExample() {\n  const [imageUrl, setImageUrl] = useState(null);\n\n  const pickImage = async () => {\n\tlet result = await ImagePicker.launchImageLibraryAsync({\n\t  mediaTypes: ImagePicker.MediaTypeOptions.All,\n\t  allowsEditing: true,\n\t  aspect: [4, 3],\n\t  quality: 1,\n\t});\n\n\tconsole.log(result);\n\n\tif (!result.cancelled) {\n\t  setImageUrl(result.uri);\n\t}\n  };\n\n  return (\n\t<View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n\t  <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\n\t  {imageUrl && (\n\t\t<Image source={{ uri: imageUrl }} style={{ width: 200, height: 200 }} />\n\t  )}\n\t</View>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAExC,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAC3C,IAAAC,SAAA,GAAgCV,QAAQ,CAAC,IAAI,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAMI,SAAS;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAIC,MAAM,SAASd,WAAW,CAACe,uBAAuB,CAAC;QACrDC,UAAU,EAAEhB,WAAW,CAACiB,gBAAgB,CAACC,GAAG;QAC5CC,aAAa,EAAE,IAAI;QACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;MAEnB,IAAI,CAACA,MAAM,CAACU,SAAS,EAAE;QACrBd,WAAW,CAACI,MAAM,CAACW,GAAG,CAAC;MACzB;IACC,CAAC;IAAA,gBAbKd,SAASA,CAAA;MAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;IAAA;EAAA,GAad;EAED,OACDvB,KAAA,CAACL,IAAI;IAAC6B,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACvE9B,IAAA,CAACL,MAAM;MAACoC,KAAK,EAAC,gCAAgC;MAACC,OAAO,EAAEvB;IAAU,EAAG,EACpEF,QAAQ,IACVP,IAAA,CAACJ,KAAK;MAACqC,MAAM,EAAE;QAAEV,GAAG,EAAEhB;MAAS,CAAE;MAACmB,KAAK,EAAE;QAAEQ,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI;IAAE,EACnE;EAAA,EACI;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}